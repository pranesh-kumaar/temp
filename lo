from keras.utils import to_categorical

# convert trade signals into one-hot encoded vectors
y = to_categorical(y + 1)

# create the neural network model
model = Sequential()
model.add(Conv1D(32, 3, activation='relu', input_shape=(time_steps, len(features))))
model.add(MaxPooling1D())
model.add(Flatten())
model.add(Dense(16, activation='relu'))
model.add(Dense(3, activation='softmax'))

# compile the model
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

# fit the model to the data
model.fit(X, y, epochs=100, batch_size=10)

# make predictions
predictions = model.predict(X)
trade_signals = np.argmax(predictions, axis=1) - 1
