import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
from sklearn.cluster import AgglomerativeClustering
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import make_blobs

# Generate sample data (replace with your data)
data, _ = make_blobs(n_samples=300, centers=5, random_state=42)

# Scale the data
scaler = StandardScaler()
data_scaled = scaler.fit_transform(data)

# Remove outliers or apply any data preprocessing as needed
# ...

# Perform Agglomerative Clustering
n_clusters = 5  # Replace with the number of clusters you want
clusterer = AgglomerativeClustering(n_clusters=n_clusters)
cluster_labels = clusterer.fit_predict(data_scaled)

# Streamlit app
st.title("Feature Importance Analysis")

# Sidebar to select a cluster
cluster_index = st.sidebar.selectbox("Select a Cluster", range(n_clusters))

# Feature Importance using Random Forest (replace with your method)
clf = RandomForestClassifier()
clf.fit(data_scaled, cluster_labels)
feature_importance = clf.feature_importances_

# Combine feature names and importance scores
feature_names = [f"Feature {i + 1}" for i in range(len(feature_importance))]
feature_importance_df = pd.DataFrame({'Feature': feature_names, 'Importance': feature_importance})
feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)

# Display top 8 features as a bar graph using Plotly
st.subheader(f'Top 8 Feature Importance for Cluster {cluster_index}:')
top_features = feature_importance_df.head(8)
fig = px.bar(top_features, x='Feature', y='Importance')
st.plotly_chart(fig)