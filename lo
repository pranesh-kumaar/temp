import numpy as np
import pandas as pd
from keras.models import Sequential
from keras.layers import Dense
from sklearn.model_selection import train_test_split

# Load your dataset here
# Replace 'your_data.csv' with the actual file path of your dataset
df = pd.read_csv('your_data.csv')

# Extract features (input) and target (output)
features = df.drop(['Open', 'High', 'Low', 'Close', 'Signal'], axis=1).values
target = df['Signal'].values

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Create the neural network model
model = Sequential()
model.add(Dense(64, activation='relu', input_shape=(X_train.shape[1],)))
model.add(Dense(32, activation='relu'))
model.add(Dense(1, activation='tanh'))  # Output layer with 'tanh' activation for -1, 0, 1

# Compile the model
model.compile(optimizer='adam', loss='mean_squared_error')

# Train the model
model.fit(X_train, y_train, epochs=50, batch_size=32, validation_split=0.1)

# Evaluate the model on the test data
loss = model.evaluate(X_test, y_test)
print(f"Test loss: {loss}")

# Predict buy, hold, sell signals on the test data
predictions = model.predict(X_test)

# Round the predictions to get -1, 0, 1 signals
predicted_signals = np.round(predictions)

# Convert the predicted signals to integers (-1, 0, 1)
predicted_signals = predicted_signals.astype(int)

# Print the first 10 predicted signals
print("Predicted signals:", predicted_signals[:10])