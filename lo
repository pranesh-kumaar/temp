import streamlit as st
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from sklearn.cluster import AgglomerativeClustering
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_blobs

# Generate sample data (replace with your data)
data, _ = make_blobs(n_samples=300, centers=5, random_state=42)

# Perform Agglomerative Clustering
n_clusters = 5  # Replace with the number of clusters you want
clusterer = AgglomerativeClustering(n_clusters=n_clusters)
cluster_labels = clusterer.fit_predict(data)

# Streamlit app
st.title("Cluster Analysis App")

# Sidebar to select a cluster
cluster_index = st.sidebar.selectbox("Select a Cluster", range(n_clusters))

# Filter data for the selected cluster
selected_cluster_indices = np.where(cluster_labels == cluster_index)[0]
selected_cluster_data = data[selected_cluster_indices]

# Feature Importance using Random Forest (replace with your method)
clf = RandomForestClassifier()
X = selected_cluster_data  # Replace with your data
y = [cluster_index] * len(X)
clf.fit(X, y)

# Create a DataFrame with feature importance scores
feature_importance_df = pd.DataFrame({'Feature': range(X.shape[1]), 'Importance': clf.feature_importances_})
feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)

# Select the top 8 features
top_features = feature_importance_df.head(8)

# Create a heatmap of the top 8 features using Plotly
heatmap_data = X[:, top_features['Feature'].values]
heatmap_fig = go.Figure(data=go.Heatmap(z=heatmap_data, colorscale='coolwarm'))
heatmap_fig.update_layout(title=f'Cluster Heatmap for Top 8 Features (Cluster {cluster_index})')
st.plotly_chart(heatmap_fig)