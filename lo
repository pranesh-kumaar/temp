import pandas as pd
from sklearn.ensemble import IsolationForest

# Define a function to detect outliers within each cluster
def detect_outliers_in_clusters(data, cluster_column, outlier_threshold=0.05):
    outliers = []

    # Iterate through each cluster
    for cluster_id in data[cluster_column].unique():
        cluster_subset = data[data[cluster_column] == cluster_id]
        cluster_data = cluster_subset.select_dtypes(include=['float64', 'int64'])  # Select only numeric columns

        # Fit Isolation Forest to the cluster data
        isolation_forest = IsolationForest(contamination=outlier_threshold, random_state=42)
        isolation_forest.fit(cluster_data)

        # Predict outliers (1 for inliers, -1 for outliers)
        cluster_outliers = isolation_forest.predict(cluster_data)

        # Append the outlier labels to the original DataFrame
        cluster_subset["IsOutlier"] = cluster_outliers
        outliers.append(cluster_subset)

    return pd.concat(outliers)

# Detect outliers within each cluster
outliers_df = detect_outliers_in_clusters(gmm_data, cluster_column="Cluster")

# Print the detected outliers
print("Detected Outliers:")
print(outliers_df[outliers_df["IsOutlier"] == -1])