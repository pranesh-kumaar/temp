import numpy as np
from sklearn.cluster import KMeans
from yellowbrick.cluster import KElbowVisualizer

# Generate or load your data (X)

# Instantiate the KMeans model with a range of clusters
model = KMeans()
visualizer = KElbowVisualizer(model, k=(1, 11))  # Adjust the range as needed

# Fit the visualizer to your data
visualizer.fit(X)

# Get the optimal number of clusters as an integer
optimal_k = visualizer.elbow_value_

print("Optimal number of clusters:", optimal_k)