X = np.load(r"C:\Users\V807880\Downloads\X.npy")
print (X)

# Sidebar to select a cluster
cluster_index = st.selectbox("Select a Cluster", range(num_clusters))

# Filter data for the selected cluster
selected_cluster_indices = np.where(cluster_labels == cluster_index)[0]
selected_cluster_data = X[selected_cluster_indices]

# Feature Importance using Random Forest (replace with your method)
clf = RandomForestClassifier()
clf.fit(X, cluster_labels)
feature_importance = clf.feature_importances_

feature_names = [f"{selected_data.columns.values.tolist()[i]}" for i in range(len(feature_importance))]
feature_importance_df = pd.DataFrame({'Feature': feature_names, 'Importance': feature_importance})
feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)

# Display top 8 features as a bar graph using Plotly
st.subheader(f'Top 8 Feature Importance for Cluster {cluster_index}:')
top_features = feature_importance_df.head(8)
fig = px.bar(top_features, x='Feature', y='Importance')
st.plotly_chart(fig, theme = 'streamlit')
