import pandas as pd
import numpy as np
from sklearn.mixture import GaussianMixture
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

# Load data from Excel
data = pd.read_excel("data.xlsx")

# Select the columns for modeling (exclude "profile name" and "region")
selected_columns = ["age", "wealth", "cash balance", "liabilities", "brokerage", "lending", "mortgage", "deposits"]

# Standardize the data
scaler = StandardScaler()
scaled_data = scaler.fit_transform(data[selected_columns])

# Create a GMM model with the desired number of components
n_components = 3  # Adjust this based on your clustering needs
gmm = GaussianMixture(n_components=n_components, random_state=42)

# Fit the GMM model to the scaled data
gmm.fit(scaled_data)

# Predict cluster labels for each data point
labels = gmm.predict(scaled_data)

# Add cluster labels back to the original DataFrame
data["cluster"] = labels

# Visualize the results (for example, using a scatter plot of two features)
plt.scatter(data["age"], data["wealth"], c=data["cluster"], cmap='viridis')
plt.title('GMM Clustering Results')
plt.xlabel('Age')
plt.ylabel('Wealth')
plt.show()