import torch
from transformers import GPT2LMHeadModel, GPT2Tokenizer

# Load the pretrained GPT-2 model and tokenizer
model_path = '/path/to/your/gpt2_model_directory'
tokenizer = GPT2Tokenizer.from_pretrained(model_path)
model = GPT2LMHeadModel.from_pretrained(model_path)

# Set the model to evaluation mode
model.eval()

# Define a function for text summarization
def generate_summary(text):
    # Tokenize input text
    input_ids = tokenizer.encode(text, return_tensors='pt')

    # Generate summary
    with torch.no_grad():
        summary_ids = model.generate(input_ids, num_beams=4, max_length=100, no_repeat_ngram_size=2, pad_token_id=model.config.pad_token_id)

    # Decode the generated summary
    summary = tokenizer.decode(summary_ids.squeeze(), skip_special_tokens=True)
    return summary

# Example usage
article_text = "Your article text goes here."
summary = generate_summary(article_text)

# Print the generated summary
print("Article Summary:")
print(summary)
